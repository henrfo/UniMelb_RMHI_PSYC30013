---
title: "Week 3 Exercises"
author: "Andrew Perfors"
---

```{r setup, include=FALSE}
# We'll begin by loading up the libraries and data we need, as always.
knitr::opts_chunk$set(echo = TRUE)

# loading the libraries
library(tidyverse)
library(here)

# loading the data
loc <- here("gladlysurvey2.csv")
gdata <- read_csv(file=loc)
```

## Day 1

### Tables

1. Create a summary table of the foods in Gladly’s data set and put it in a a variable called `foodtable`. Once you got it to work, knit this document to Word.

```{r day1tables1, echo=FALSE}

```

2. Make a cross tab of year of birth by age. Do you think that age is correct for everyone? [Hint: would you still think this if it were the end of 2023 and the data were the same?]

```{r day1tables2, echo=FALSE}

```

3. Create a summary table of foods by species in the dataset. It will be kind of big. As an optional extra, see if you can use one of the packages mentioned in lecture to make it look nice.

```{r day1tables3, echo=FALSE}

```

### Pipes

1. The following code generates 100 random numbers from a normal distribution and calculates the mean of those numbers. Rewrite it using pipes. 

```{r day1pipes1}
# old code
nums <- rnorm(n=100)
meanNums <- mean(nums)

# new code put here
N <- 100

```

2. The following code generates 100 random numbers from a normal distribution with mean 100 and standard deviation 15. It then calculates the trimmed mean of those numbers. Rewrite it using pipes. Assign it to a new variable at the end. (A trimmed mean is the mean calculated on the dataset with a certain proportion of the ends removed. In this example, 20% is trimmed off each end. This is often more robust to extreme outliers than just taking the mean is.)

```{r day1pipes2}
# old code
nums <- rnorm(n=100,mean=100,sd=15)
meanNums <- mean(nums,trim=0.2)

# new code
N <- 100

```

### Grouping

1. Calculate the mean age of each species in Gladly’s dataset. 

```{r day1grouping1}

```

2. Group Gladly's data by species, and for each species calculate two variables: `mnCarrot` (which gives the mean answer to the carrot question) and `sumCarrot` (which gives the sum of everyone of that species answers to the carrot question). Note: you’ll have to use `na.rm` because there are some missing datapoints. Which of these do you think is more informative about how each species answers the question, and why?

```{r day1grouping2}

```

3. What is the difference, if any, between `group_by(species,gender)` and `group_by(gender,species)`?

```{r day1grouping3}

```


4. Group Gladly’s data by gender, and for each gender calculate `lowQn` (the 25th quantile), `hiQn` (the 75th quantile), and `median` (the 50th quantile) for age.

```{r day1grouping4}

```

5. Challenge: in the last slide we calculated `stdErr` using the summary statistics calculated in a previous `group_by()` command. It’s possible to do this all in one set of pipes (i.e., without having to save the intermediate tibble). See if you can figure out how to do this. NOTE: if you can't do this, don’t worry! I just want you to practice playing around for yourself, but it's not necessarily intuitively obvious. 

```{r day1grouping5}

```

